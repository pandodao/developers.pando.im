import{_ as s,o as n,c as a,a as e}from"./app.22dcae98.js";const F=JSON.parse('{"title":"Invoke Actions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Generate Actions by SDK","slug":"generate-actions-by-sdk","link":"#generate-actions-by-sdk","children":[]},{"level":2,"title":"Generate Actions Manually","slug":"generate-actions-manually","link":"#generate-actions-manually","children":[]},{"level":2,"title":"Send Transactions","slug":"send-transactions","link":"#send-transactions","children":[]}],"relativePath":"guide/invoke-actions.md"}'),o={name:"guide/invoke-actions.md"},l=e(`<h1 id="invoke-actions" tabindex="-1">Invoke Actions <a class="header-anchor" href="#invoke-actions" aria-hidden="true">#</a></h1><p>Pando are a set of a blockchain based protocols, which are designed to be executed by sending transactions to Pando&#39;s MTG.</p><p>For example, if you want to get information from the protocols, call the APIs and read the response is the easiest way. But if you want to interact with the protocols, tell the protocols what you want to do, with cryptocurrency as the medium, you need to send transactions to Pando&#39;s MTG.</p><p>The <code>Action Protocol</code> to illustrate behaviors of each transaction. <code>Action Protocol</code> is basically a bytes array, which is encoded in the transaction memo field.</p><p>When you send a transaction to Pando&#39;s MTG, MTG Nodes will try to decode the memo field and execute the action in it.</p><h2 id="generate-actions-by-sdk" tabindex="-1">Generate Actions by SDK <a class="header-anchor" href="#generate-actions-by-sdk" aria-hidden="true">#</a></h2><p>Although action are encoded in bytes, you can easily generate them by using the <a href="https://github.com/fox-one/4swap-sdk-go" target="_blank" rel="noreferrer">4swap SDK</a>, to simplify the process.</p><p>The following example showcases how to generate a swap action by <code>mtg.SwapAction</code>:</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// the ID to trace the orders</span></span>
<span class="line"><span style="color:#A6ACCD;">followID</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> uuid</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewV4</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// build a swap action, specified the parameters</span></span>
<span class="line"><span style="color:#A6ACCD;">action </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> mtg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SwapAction</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    receiverID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    followID</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">    OutputAssetID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    preOrder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Routes</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// the minimum amount of asset you will get.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// you may want to change this value to a number which is less than preOrder.FillAmount</span></span>
<span class="line"><span style="color:#A6ACCD;">    preOrder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FillAmount</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Div</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decimal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewFromFloat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.005</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// generate the memo</span></span>
<span class="line"><span style="color:#A6ACCD;">memo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> action</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Encode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">group</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PublicKey</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> err</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">memo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> memo</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="generate-actions-manually" tabindex="-1">Generate Actions Manually <a class="header-anchor" href="#generate-actions-manually" aria-hidden="true">#</a></h2><p><code>@TODO</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">3,:receiver_id,:follow_id,:fill_asset_id,:routes,:minimum</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="send-transactions" tabindex="-1">Send Transactions <a class="header-anchor" href="#send-transactions" aria-hidden="true">#</a></h2><p>When you have the action, encoded in the memo field, you&#39;re ready to send transactions to Pando&#39;s MTG.</p><p>There are several ways to send transactions to Pando&#39;s MTG. For testing purpose, you can use <code>mixin-cli</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#FFCB6B;">mixin-cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> $LYRIC_KEYSTORE </span><span style="color:#C3E88D;">transfer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--asset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">31d2ea9c-95eb-</span><span style="color:#F78C6C;">3355</span><span style="color:#C3E88D;">-b65b-ba096853bc18</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--amount </span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">a753e0eb-</span><span style="color:#F78C6C;">3010</span><span style="color:#C3E88D;">-4c4a-a7b2-a7bda4063f62</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">099627f8-</span><span style="color:#F78C6C;">4031</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">42e3</span><span style="color:#C3E88D;">-a846-006ee598c56e</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">aefbfd62-727d-</span><span style="color:#F78C6C;">4424</span><span style="color:#C3E88D;">-89db-ae41f75d2e04</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">d68ca71f-0e2c-458a-bb9c-1d6c2eed2497</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">e4bc0740-f8fe-418c-ae1b-32d9926f5863</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--threshold </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--memo $YOUR_MEMO_HERE </span></span>
<span class="line"></span></code></pre></div><p>Note that the <code>receivers</code> fields are filled with the members of the MTG. The <code>threshold</code> field is the multisig threshold of the MTG. You can get the members and threshold from <code>/info</code> API as we mentioned in the <a href="./call-apis.html">previous section</a>.</p><p>the <code>memo</code> field is the action you generated.</p><p>For production, you may need to use the <a href="https://github.com/fox-one/mixin-sdk-go" target="_blank" rel="noreferrer">mixin-sdk-go</a> or other SDKs to do that.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">client </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> mixin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewFromKeystore</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">keystore</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Transaction</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mixin</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TransferInput</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  AssetID</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> payAssetID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  Amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  decimal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RequireFromString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  TraceID</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> mixin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RandomTraceID</span><span style="color:#89DDFF;">(),</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  Memo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">$YOUR_MEMO_HERE</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  OpponentMultisig</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Receivers </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;receivers,omitempty&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    Threshold </span><span style="color:#C792EA;">uint8</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;threshold,omitempty&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    Receivers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> members</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">          </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    Threshold</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint8</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">threshold</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">pin</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div>`,20),p=[l];function t(c,r,i,D,y,A){return n(),a("div",null,p)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
