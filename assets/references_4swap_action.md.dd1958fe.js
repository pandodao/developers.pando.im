import{_ as s,o as e,c as a,a as n}from"./app.ce1ce304.js";const D=JSON.parse('{"title":"4swap Action","description":"","frontmatter":{},"headers":[{"level":2,"title":"Swap","slug":"swap","link":"#swap","children":[]},{"level":2,"title":"Add liquidity","slug":"add-liquidity","link":"#add-liquidity","children":[]},{"level":2,"title":"Remove liquidity","slug":"remove-liquidity","link":"#remove-liquidity","children":[]}],"relativePath":"references/4swap/action.md"}'),l={name:"references/4swap/action.md"},o=n(`<h1 id="_4swap-action" tabindex="-1">4swap Action <a class="header-anchor" href="#_4swap-action" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">DRAFT PROPOSAL</p><p>The section is a draft proposal, it&#39;s not finalized yet.</p></div><h2 id="swap" tabindex="-1">Swap <a class="header-anchor" href="#swap" aria-hidden="true">#</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F07178;">20    bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#F07178;">20~84 bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MMISG</span></span>
<span class="line"><span style="color:#F07178;">16    bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fill_asset_id</span></span>
<span class="line"><span style="color:#F07178;">8     bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">minimum</span></span>
<span class="line"><span style="color:#F07178;">1     byte</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">length of route_hash</span></span>
<span class="line"><span style="color:#F07178;">N     bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">route_hash</span></span>
<span class="line"></span></code></pre></div><p>In which,</p><ul><li><code>header</code> is the header of the action, <code>header.action</code> = <code>0x01</code>.</li><li><code>MMISG</code> is the address of the user or the group who will receive the swap result asset.</li><li><code>fill_asset_id</code> is the asset id of the asset to be filled.</li><li><code>minimum</code> is the minimum amount of the asset you expect to receive.</li><li><code>route_hash</code> is the <a href="https://hashids.org/" target="_blank" rel="noreferrer">hash_id</a> of the route. The length of the hash is determined by the incoming byte.</li></ul><p><code>@TODO: add the route hash implementation here</code></p><h2 id="add-liquidity" tabindex="-1">Add liquidity <a class="header-anchor" href="#add-liquidity" aria-hidden="true">#</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F07178;">20    bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#F07178;">20~84 bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MMISG</span></span>
<span class="line"><span style="color:#F07178;">16    bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">asset_id</span></span>
<span class="line"><span style="color:#F07178;">2     bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">slippage</span></span>
<span class="line"><span style="color:#F07178;">2     bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">timeout</span></span>
<span class="line"></span></code></pre></div><p>In which,</p><ul><li><code>header</code> is the header of the action, <code>header.action</code> = <code>0x02</code>.</li><li><code>MMISG</code> is the address of the user or the group who will receive the lp token.</li><li><code>asset_id</code> is the asset id of the asset to be added.</li><li><code>slippage</code> is a number between 0 and 10000, which means the maximum slippage of the action. For example, if the slippage is 100, it means the maximum slippage is 1%.</li><li><code>timeout</code> is the timeout of the action, in seconds.</li></ul><h2 id="remove-liquidity" tabindex="-1">Remove liquidity <a class="header-anchor" href="#remove-liquidity" aria-hidden="true">#</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F07178;">20    bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">header</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#F07178;">20~84 bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MMISG</span></span>
<span class="line"></span></code></pre></div><p>In which,</p><ul><li><code>header</code> is the header of the action, <code>header.action</code> = <code>0x03</code>.</li><li><code>MMISG</code> is the address of the user or the group who will receive the assets.</li></ul>`,15),t=[o];function p(i,c,r,d,h,y){return e(),a("div",null,t)}const m=s(l,[["render",p]]);export{D as __pageData,m as default};
