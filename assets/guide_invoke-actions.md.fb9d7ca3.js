import{_ as s,o as a,c as n,a as e}from"./app.137f2748.js";const h=JSON.parse('{"title":"Invoke Actions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Generate actions by API","slug":"generate-actions-by-api","link":"#generate-actions-by-api","children":[{"level":3,"title":"Form the action","slug":"form-the-action","link":"#form-the-action","children":[]},{"level":3,"title":"Encode the action","slug":"encode-the-action","link":"#encode-the-action","children":[]}]},{"level":2,"title":"Generate actions by SDK","slug":"generate-actions-by-sdk","link":"#generate-actions-by-sdk","children":[]},{"level":2,"title":"Send transactions","slug":"send-transactions","link":"#send-transactions","children":[{"level":3,"title":"Send by mixin-cli","slug":"send-by-mixin-cli","link":"#send-by-mixin-cli","children":[]},{"level":3,"title":"Send programmatically","slug":"send-programmatically","link":"#send-programmatically","children":[]}]}],"relativePath":"guide/invoke-actions.md"}'),o={name:"guide/invoke-actions.md"},l=e(`<h1 id="invoke-actions" tabindex="-1">Invoke Actions <a class="header-anchor" href="#invoke-actions" aria-hidden="true">#</a></h1><p>Pando is a set of blockchain protocols executed by sending transactions to multisig address.</p><p>To retrieve information, call the APIs and read the response.</p><p>However, if you want to interact with the protocols and tell them what you want to do with cryptocurrency, you need to send transactions to Pando&#39;s multisig address.</p><p>The behavior of each transaction is illustrated by the <code>Action Protocol</code>, a byte array encoded in the transaction memo field. When you send a transaction, MTG Nodes decode the memo field and execute the action within.</p><h2 id="generate-actions-by-api" tabindex="-1">Generate actions by API <a class="header-anchor" href="#generate-actions-by-api" aria-hidden="true">#</a></h2><p>To better understand how the action works, let&#39;s generate the action manually. This time, we&#39;ll use 4swap&#39;s <code>swap</code> action as an example: We want to swap <code>CNB</code> to <code>DOGE</code>.</p><p>First, we need to know the asset ID of <code>CNB</code> and <code>DOGE</code>:</p><ul><li>CNB: <code>965e5c6e-434c-3fa9-b780-c50f43cd955c</code></li><li>DOGE: <code>6770a1e5-6086-44d5-b60f-545f9d9e8ffd</code></li></ul><p>Those 2 assets has <a href="https://app.4swap.org/#/pair/detail?base=6770a1e5-6086-44d5-b60f-545f9d9e8ffd&amp;quote=965e5c6e-434c-3fa9-b780-c50f43cd955c" target="_blank" rel="noreferrer">a pool in 4swap</a>, so we can swap them directly.</p><h3 id="form-the-action" tabindex="-1">Form the action <a class="header-anchor" href="#form-the-action" aria-hidden="true">#</a></h3><p>The <code>swap</code> action are formatted as following string</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">3,:receiver_id,:follow_id,:fill_asset_id,:routes,:minimum</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">in which:</p><ul><li><code>3</code>: the action type, <code>3</code> means <code>swap</code>.</li><li><code>receiver_id</code>: the ID of the receiver, you can use the <code>client_id</code> in your keystore.</li><li><code>follow_id</code>: an UUID to trace the order. You can use <code>uuidgen</code> to generate a random UUID.</li><li><code>fill_asset_id</code>: the asset ID of the asset you want to get. In the example, we want to get <code>DOGE</code>, which is <code>6770a1e5-6086-44d5-b60f-545f9d9e8ffd</code>.</li><li><code>routes</code>: the routes of the swap. We&#39;ll leave it blank for now, 4swap will use <a href="https://app.4swap.org/#/pair/detail?base=6770a1e5-6086-44d5-b60f-545f9d9e8ffd&amp;quote=965e5c6e-434c-3fa9-b780-c50f43cd955c&amp;source=market" target="_blank" rel="noreferrer">CNB/DOGE pool</a> for the swap. In real projects, you need to calculate the routes by yourself.</li><li><code>minimum</code>: the minimum amount of asset you will get. In the example, we want to get at least <code>0.00000001 DOGE</code>.</li></ul></div><p>Assume that your <code>client_id</code> is <code>eac51982-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>, so the action will be:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">,eac51982-xxxx-xxxx-xxxx-xxxxxxxxxxxx,$RANDOM_UUID_HERE,6770a1e5-</span><span style="color:#F78C6C;">6086</span><span style="color:#A6ACCD;">-44d5-b60f-545f9d9e8ffd,,</span><span style="color:#F78C6C;">0.00000001</span></span>
<span class="line"></span></code></pre></div><h3 id="encode-the-action" tabindex="-1">Encode the action <a class="header-anchor" href="#encode-the-action" aria-hidden="true">#</a></h3><p>It&#39;s hard to encode the action without writing code. Fortunately, 4swap provides an API to encode the action:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--location</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--request</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POST</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://api.4swap.org/api/actions</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--header </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type: application/json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--data-raw </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{</span></span>
<span class="line highlighted"><span style="color:#C3E88D;">  &quot;action&quot;:     &quot;3,eac51982-xxxx-xxxx-xxxx-xxxxxxxxxxxx,</span><span style="color:#89DDFF;">&#39;$(</span><span style="color:#FFCB6B;">uuidgen</span><span style="color:#89DDFF;">)&#39;</span><span style="color:#C3E88D;">,6770a1e5-6086-44d5-b60f-545f9d9e8ffd,,0.00000001&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>It will output something like that:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">1675064016874</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">action</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PBK6......7czqcUt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C3E88D;">follow_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bde36668-8715-4bdf-9a40-d13ad5561d53</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>The <code>action</code> field is the encoded action, we will put it in the <code>memo</code> field of the transaction.</p><h2 id="generate-actions-by-sdk" tabindex="-1">Generate actions by SDK <a class="header-anchor" href="#generate-actions-by-sdk" aria-hidden="true">#</a></h2><p>Action are encoded in bytes and encrypted by ed25519. It&#39;s recommended to generate it by using the <a href="https://github.com/fox-one/4swap-sdk-go" target="_blank" rel="noreferrer">4swap SDK</a>, to simplify the process.</p><p>The following example shows how to generate a swap action by <code>mtg.SwapAction</code>:</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// the ID to trace the orders</span></span>
<span class="line"><span style="color:#A6ACCD;">followID</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> uuid</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewV4</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// build a swap action, specified the parameters</span></span>
<span class="line"><span style="color:#A6ACCD;">action </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> mtg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SwapAction</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    receiverID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    followID</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">    OutputAssetID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    preOrder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Routes</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// the minimum amount of asset you will get.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// you may want to change this value to a number which is less than preOrder.FillAmount</span></span>
<span class="line"><span style="color:#A6ACCD;">    preOrder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FillAmount</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Div</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decimal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewFromFloat</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.005</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// generate the memo</span></span>
<span class="line"><span style="color:#A6ACCD;">memo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> action</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Encode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">group</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PublicKey</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> err</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">memo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> memo</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="send-transactions" tabindex="-1">Send transactions <a class="header-anchor" href="#send-transactions" aria-hidden="true">#</a></h2><h3 id="send-by-mixin-cli" tabindex="-1">Send by <code>mixin-cli</code> <a class="header-anchor" href="#send-by-mixin-cli" aria-hidden="true">#</a></h3><p>When you have the encoded action for the memo field, you can send transactions to Pando&#39;s MTG.</p><p>There are various ways to send transactions, but for testing, you can use <code>mixin-cli</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mixin-cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./keystore.json</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">transfer</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--asset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">965e5c6e-434c-3fa9-b780-c50f43cd955c</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--amount </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">a753e0eb-</span><span style="color:#F78C6C;">3010</span><span style="color:#C3E88D;">-4c4a-a7b2-a7bda4063f62</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">099627f8-</span><span style="color:#F78C6C;">4031</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">42e3</span><span style="color:#C3E88D;">-a846-006ee598c56e</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">aefbfd62-727d-</span><span style="color:#F78C6C;">4424</span><span style="color:#C3E88D;">-89db-ae41f75d2e04</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">d68ca71f-0e2c-458a-bb9c-1d6c2eed2497</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--receivers </span><span style="color:#C3E88D;">e4bc0740-f8fe-418c-ae1b-32d9926f5863</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--threshold </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">--memo $YOUR_MEMO_HERE </span></span>
<span class="line"></span></code></pre></div><p>Note that the <code>receivers</code> fields are filled with the members of the MTG. The <code>threshold</code> field is the multisig threshold of the MTG. You can get the members and threshold from <code>/info</code> API as we mentioned in the <a href="./call-apis.html">previous section</a>.</p><p>the <code>memo</code> field is the action you generated.</p><p>Run the command and type <code>y</code> to confirm the transfer, you will see the transaction is sent to the 4swap MTG. Wait for a while, you will receive some <code>DOGE</code> in your keystore:</p><div class="language-base"><button title="Copy Code" class="copy"></button><span class="lang">base</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">$ mixin-cli -f $LYRIC_KEYSTORE asset list</span></span>
<span class="line"><span style="color:#A6ACCD;">AssetId                               Symbol     Name                     Balance</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">6770a1e5-6086-44d5-b60f-545f9d9e8ffd  DOGE       Dogecoin                 0.00000212</span></span>
<span class="line"><span style="color:#A6ACCD;">965e5c6e-434c-3fa9-b780-c50f43cd955c  CNB        Chui Niu Bi              12.919</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="send-programmatically" tabindex="-1">Send programmatically <a class="header-anchor" href="#send-programmatically" aria-hidden="true">#</a></h3><p>For production, you may need to use the <a href="https://github.com/fox-one/mixin-sdk-go" target="_blank" rel="noreferrer">mixin-sdk-go</a> or other SDKs to do that.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">client </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> mixin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewFromKeystore</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">keystore</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Transaction</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mixin</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TransferInput</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  AssetID</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> payAssetID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  Amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  decimal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RequireFromString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  TraceID</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> mixin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RandomTraceID</span><span style="color:#89DDFF;">(),</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  Memo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">$YOUR_MEMO_HERE</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  OpponentMultisig</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Receivers </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;receivers,omitempty&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    Threshold </span><span style="color:#C792EA;">uint8</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;threshold,omitempty&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    Receivers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> members</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">          </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    Threshold</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint8</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">threshold</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">pin</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div>`,38),p=[l];function t(c,r,i,D,y,d){return a(),n("div",null,p)}const A=s(o,[["render",t]]);export{h as __pageData,A as default};
